name: Modular

on:
  push:
    branches:
      - modular

jobs:
  all:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            shell: "bash"
          - os: macos-13
            shell: "bash"
            skip: ["lexical_cast"]
          - os: windows-2022
            shell: "cmd"
            skip: ["hof"]
    runs-on: ${{matrix.os}}
    steps:
      - name: "Checkout"
        uses: actions/checkout@main
        with: { submodules: true, path: "boostroot" }
      - name: "Checkout"
        uses: actions/checkout@main
        with: { repository: "bfgroup/b2", path: "b2" }
      - name: B2
        if: matrix.shell != 'bash'
        shell: bash
        run: |
          cd "${{github.workspace}}/b2"
          ./bootstrap.sh
      - name: B2
        if: matrix.shell == 'cmd'
        shell: cmd
        run: |
          cd "${{github.workspace}}/b2"
          ./bootstrap.bat
      - name: callable_traits
        if: ${{ !contains(matrix.skip, 'callable_traits') }}
        shell: ${{matrix.shell}}
        run: 'cd "${{github.workspace}}/boostroot" && "${{github.workspace}}/b2/b2" libs/callable_traits//all'
      - name: compatibility
        if: ${{ !contains(matrix.skip, 'compatibility') }}
        shell: ${{matrix.shell}}
        run: 'cd "${{github.workspace}}/boostroot" && "${{github.workspace}}/b2/b2" libs/compatibility//all'
      - name: hof
        if: ${{ !contains(matrix.skip, 'hof') }}
        shell: ${{matrix.shell}}
        run: 'cd "${{github.workspace}}/boostroot" && "${{github.workspace}}/b2/b2" libs/hof//all'
      - name: lexical_cast
        if: ${{ !contains(matrix.skip, 'lexical_cast') }}
        shell: ${{matrix.shell}}
        run: 'cd "${{github.workspace}}/boostroot" && "${{github.workspace}}/b2/b2" libs/lexical_cast//all'
      - name: preprocessor
        if: ${{ !contains(matrix.skip, 'preprocessor') }}
        shell: ${{matrix.shell}}
        run: 'cd "${{github.workspace}}/boostroot" && "${{github.workspace}}/b2/b2" libs/preprocessor//all'
